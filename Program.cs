
//1.Створити клас Person, який має:
//– закрите поле типу string, у якому зберігається ім’я;
//– закрите поле типу string, у якому зберігається прізвище;
//– закрите поле типу System.DateTime для дати народження.
//У класі Person визначити конструктори:
//– з трьома параметрами типу string, string, DateTime для ініціалізації усіх
//полів класу;
//– без параметрів, що ініціалізує усі поля класу деякими значеннями за
//умовчанням.
//У класі Person визначити властивості з методами get і set:
//– типу string для доступу до поля з ім’ям;
//– типу string для доступу до поля з прізвищем;

//18

//– типу DateTime для доступу до поля з датою народження;
//– типу int c методами get і set для отримання інформації (get) і зміни (set)
//року народження у закритому полі типу DateTime, у якому зберігається дата
//народження.
//У класі Person визначити:
//– перевантажену(override) версію віртуального методу ToString() для
//формування рядка зі значеннями усіх полів класу;
//– метод string ToShortString(), який повертає рядок, що містить тільки ім’я
//та прізвище.
//2. Відповідно до обраного варіанта (ПорядковийНомерЖурналіГрупи %
//11 + 1) = (2,52 == 2) створити перелік (enum) та ще 2 класи, серед яких один клас буде
//використовувати усі створені типи даних для оголошення своїх характеристик.
//3. У методі Main() виконати усі описані дії відповідно до обраного
//варіанта та максимально протестувати усі створені типи даних.
//using LabaOOP5;

//Визначити enum Frequency зі значеннями Weekly, Monthly,
//Yearly.
//Визначити клас Article, який має три властивості, що автореалізуються,
//доступні для читання і запису: автор статті(Person); назва статті; рейтинг
//статтті(double).

//20

//У класі Article визначити конструктори з повним списком параметрів і без
//параметрів, перевантажену (override) версію віртуального методу ToString() для
//формування рядка зі значеннями усіх властивостей класу.
//Визначити клас Magazine, що має закриті поля типу:
//– string з назвою журналу;
//– Frequency з інформацією про періодичність виходу журналу;
//– DateTime з датою виходу журналу;
//– int з тиражем журналу;
//– Article[] зі списком статей у журналі.
//У класі Magazine визначити:
//– конструктори з повним списком параметрів та без параметрів,
//перевантажену (override) версію віртуального методу ToString() для
//формування рядка зі значеннями усіх властивостей класу та метод string
//ToShortString(), який формує рядок зі значеннями усіх полів класу без списку
//статей, але зі значенням середнього рейтингу статей;
//– властивості з методами get і set для доступу до усіх приватних полів,
//передбачити можливі виключення у методах set;
//– властивість типу double (тілько з методом get), яка обчислює середнє
//значення рейтингу списку статей;
//– індексатор логічного типу (тільки з методом get) з одним параметром
//типу Frequency; значення індексатора дорівнює true, якщо значення поля типу
//Frequency співпадає зі значенням індексу, і false у іншому випадку;
//– метод void AddArticles (params Article[]) для додавання елементів до
//списку статей у журналі.
//В методі Main():
//– створити один об’єкт типу Magazine, вивести скорочену інформацію про
//журнал на екран (метод ToShortString()).
//– вивести значення індексатору для значення індексу Frequency.Weekly,
//Frequency.Monthly и Frequency.Yearly;

//21

//– присвоїти значення усім визначеним у типі Magazine властивостям,
//вивести повну інформацію про журнал на екран (метод ToString ).
//– за допомогою методу AddArticles(params Article[]) додати статті у
//журнал і вивести на екран оновлений перелік статей журналу.
//– створити масив журналів, вивести на екран три найкращі журнали за
//рейтингом та журнал з найбільшою кількістю статей.
namespace LabaOOP5
{
    internal class Program
    {
        public enum Frequency
        {
            Weekly,
            Monthly,
            Yearly
        }
        static void Main(string[] args)
        {
            GenMagazine genMagazine = new GenMagazine();           
            Magazine[] magazines = genMagazine.GenerateMagazine(7, 15);
               foreach(Magazine i in magazines)
                {
                    Console.WriteLine(i);
                }
          
        }
    }
}
